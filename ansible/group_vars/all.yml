ansible_become_method: sudo
ansible_become_user: root
ansible_python_interpreter: /usr/bin/python3
ansible_ssh_common_args: -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no

# password is generated this way: openssl passwd -1 '{password}'
# Below is the result for `openssl passwd -1 'superpass'`
root_password: "$1$ertRT1Bx$fGF3AQh11aG4XAgsO1AZN."

timezone: Europe/Minsk

repo_domain: mydomain.com
vm_root: ../tmp
vm_root_abs: "{{ vm_root | realpath }}"
ssh_key_location: '~/.ssh/id_ed25519.pub'
#extra_ssh_key: ""

# default network mode for libvirt
# 'nat' is always good for local desktop deployments, 'route' may be more helpfull for server deployments
network_mode: nat

# libvirt or vbox
vm_type: libvirt

mem_mb: 3072
disk_size: 10G
cores: "{{ ansible_processor_vcpus }}"

users:
  - name: "{{ ansible_local_user }}"
    ssh_key: "{{ lookup('file', ssh_key_location) }}"

subnet: 10.118
subnet_wan: "{{ subnet }}.10"
subnet_virt: "{{ subnet }}.11"
subnet_lan: "{{ subnet }}.12"
subnet_ext: "{{ subnet }}.13"

mac_prefix: "52:54:00:12"
mac_prefix_wan: "{{ mac_prefix }}:34"
mac_prefix_lan: "{{ mac_prefix }}:35"
# this prefix is used only for vbox setup
mac_prefix_inst: "{{ mac_prefix }}:33"

virt_ips:
  - "{{ subnet_virt }}.20"
  - "{{ subnet_virt }}.21"
  - "{{ subnet_virt }}.22"

virt_ips_per_node: 3
vrrp_pass: 675bi5e5712j7

vlan_tag: "4000"

if_list_libvirt:
  - name: wan0
    ipv4:
      addr: "{{ subnet_wan }}.{{ ip_short }}"
      mask: 24
      gw: "{{ subnet_wan }}.1"
    mac: '{{ mac_prefix_wan }}:{{ mac_short }}'
  - name: "wan0.{{ vlan_tag }}"
    ipv4:
      addr: "{{ subnet_lan }}.{{ ip_short }}"
      mask: 24
    mac: '{{ mac_prefix_lan }}:{{ mac_short }}'

if_list_vbox:
  - name: wan0
    ipv4:
      addr: "{{ subnet_wan }}.{{ ip_short }}"
      mask: 24
      gw: "{{ subnet_wan }}.1"
    mac: '{{ mac_prefix_wan }}:{{ mac_short }}'
  - name: wan1
    ipv4:
      addr: "{{ subnet_lan }}.{{ ip_short }}"
      mask: 24
    mac: '{{ mac_prefix_lan }}:{{ mac_short }}'
  - name: wan2
    ipv4:
      dhcp: true
    mac: '{{ mac_prefix_inst }}:{{ mac_short }}'

if_list: "{{ if_list_vbox if vm_type == 'vbox' else if_list_libvirt }}"

###### disk options

disk_bus: "{{ 'sata' if vm_type == 'vbox' else 'virtio' }}"
disk_name: "{{ 'sda' if disk_bus == 'sata' else 'vda' }}"
disk_io: io_uring
#disk_io: threads

###### host template


disks:
- name: "{{ disk_name }}"
fs_type: btrfs
btrfs_profile: single
arch: generic
datacenter: qemu
